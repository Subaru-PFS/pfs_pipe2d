FROM centos:7
# Building the PFS stack from scratch on Centos using install_pfs.sh
# Useful for testing the recommended install method.

MAINTAINER paprice
LABEL description="Subaru PFS 2D pipeline" \
      name="paprice/centos_pfs_pipe2d"

ARG DEVTOOLSET=8
ARG INSTALL_PFS_ARGS
ARG INSTALL_DIR=/opt/pfs

ENV OMP_NUM_THREADS=1
ENV SCONSFLAGS="-j 4"

SHELL ["/bin/bash", "-c"]

USER root

# Upgrade compiler using devtoolset-8
RUN yum -y update \
 && yum install -y centos-release-scl \
 && yum install -y \
        "devtoolset-${DEVTOOLSET}-gcc" \
        "devtoolset-${DEVTOOLSET}-gcc-c++" \
        "devtoolset-${DEVTOOLSET}-gcc-gfortran" \
 && echo ". /opt/rh/devtoolset-${DEVTOOLSET}/enable" > "/etc/profile.d/devtoolset-${DEVTOOLSET}.sh" \
 && yum clean all -y

# LSST stack prerequisites
RUN yum -y update \
 && yum install -y epel-release \
 && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash \
 && yum install -y bison curl blas bzip2-devel bzip2 flex fontconfig \
        freetype-devel git git-lfs libuuid-devel \
        libXext libXrender libXt-devel make openssl-devel patch perl \
        readline-devel tar zlib-devel ncurses-devel cmake glib2-devel \
        java-1.8.0-openjdk gettext perl-ExtUtils-MakeMaker \
        which \
 && yum clean all -y

# Conveniences
RUN yum install -y screen tree \
 && yum clean all -y

RUN useradd -m pfs
RUN mkdir -p ${INSTALL_DIR} && chown pfs:pfs ${INSTALL_DIR}

USER pfs
RUN mkdir -p ${INSTALL_DIR}/bin
COPY bin/install_pfs.sh /home/pfs/bin/
COPY bin/install_lsst.sh /home/pfs/bin/
COPY bin/build_pfs.sh /home/pfs/bin/
WORKDIR /home/pfs

# Set up git-lfs
RUN echo $'# Cache anonymous access to LSST Git LFS S3 servers\n\
[credential "https://lsst-sqre-prod-git-lfs.s3-us-west-2.amazonaws.com"]\n\
    helper = store\n\
[credential "https://s3.lsst.codes"]\n\
    helper = store\n' >> /home/pfs/.gitconfig \
 && echo $'https://:@lsst-sqre-prod-git-lfs.s3-us-west-2.amazonaws.com\n\
https://:@s3.lsst.codes\n' >> /home/pfs/.git-credentials \
 && git lfs install

# Strips out anything excess after the install
RUN . /opt/rh/devtoolset-${DEVTOOLSET}/enable \
 && /home/pfs/bin/install_pfs.sh ${INSTALL_PFS_ARGS} -t current ${INSTALL_DIR} \
 && ( find ${INSTALL_DIR} -exec strip --strip-unneeded --preserve-dates {} + \
      > /dev/null 2>&1 || true ) \
 && ( find ${INSTALL_DIR} -maxdepth 5 -name tests -type d -exec rm -rf {} + \
      > /dev/null 2>&1 || true ) \
 && ( find ${INSTALL_DIR} -maxdepth 5 -path "*doc/html" -type d -exec rm -rf {} + \
      > /dev/null 2>&1 || true ) \
 && ( find ${INSTALL_DIR} -maxdepth 5 -name src -type d -exec rm -rf {} + \
      > /dev/null 2>&1 || true )

RUN echo $'. '${INSTALL_DIR}$'/loadLSST.bash\n\
setup pfs_pipe2d\n' >> /home/pfs/.bashrc

CMD /bin/bash
